{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nhakkaou/Desktop/swift-companie/App.js\";\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ProfileScreen, ProjectScreen, ChartScreen, HomeScreen } from \"./Views\";\nvar MyTheme = {\n  dark: true,\n  colors: {\n    primary: \"rgb(255, 45, 85)\",\n    background: \"#000\",\n    card: \"#292D39\",\n    text: \"white\",\n    border: \"#292D39\",\n    notification: \"rgb(255, 69, 58)\"\n  }\n};\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      result = _React$useState2[0],\n      setRes = _React$useState2[1];\n\n  return result.length > 0 ? React.createElement(React.Fragment, null, React.createElement(HomeScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  })) : React.createElement(NavigationContainer, {\n    theme: MyTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Projects\",\n    component: ProjectScreen,\n    options: {\n      headerShown: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Charts\",\n    component: ChartScreen,\n    options: {\n      headerShown: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/nhakkaou/Desktop/swift-companie/App.js"],"names":["React","NavigationContainer","DefaultTheme","createNativeStackNavigator","createDrawerNavigator","ProfileScreen","ProjectScreen","ChartScreen","HomeScreen","MyTheme","dark","colors","primary","background","card","text","border","notification","Drawer","App","useState","result","setRes","length","headerShown"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,WAAvC,EAAoDC,UAApD;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,IADQ;AAEdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,kBADH;AAENC,IAAAA,UAAU,EAAE,MAFN;AAGNC,IAAAA,IAAI,EAAE,SAHA;AAINC,IAAAA,IAAI,EAAE,OAJA;AAKNC,IAAAA,MAAM,EAAE,SALF;AAMNC,IAAAA,YAAY,EAAE;AANR;AAFM,CAAhB;AAYA,IAAMC,MAAM,GAAGd,qBAAqB,EAApC;AAYA,eAAe,SAASe,GAAT,GAAe;AAC5B,wBAAyBnB,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAzB;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,MAAf;;AACA,SACGD,MAAM,CAACE,MAAP,GAAgB,CAAjB,GAAsB,0CAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAF,CAAtB,GACA,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEJ,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEC,aAFb;AAGE,IAAA,OAAO,EAAE;AAAEkB,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,MAAD,CAAQ,MAAR;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEjB,WAFb;AAGE,IAAA,OAAO,EAAE;AAAEiB,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAFF;AAyBD","sourcesContent":["import * as React from \"react\";\nimport { Button, View, Text } from \"react-native\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ProfileScreen, ProjectScreen, ChartScreen, HomeScreen } from \"./Views\";\nconst MyTheme = {\n  dark: true,\n  colors: {\n    primary: \"rgb(255, 45, 85)\",\n    background: \"#000\",\n    card: \"#292D39\",\n    text: \"white\",\n    border: \"#292D39\",\n    notification: \"rgb(255, 69, 58)\",\n  },\n};\n\nconst Drawer = createDrawerNavigator();\n// const Stack = createNativeStackNavigator();\n\n// function Root() {\n//   return (\n//     <Stack.Navigator>\n//       <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n//       <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n//     </Stack.Navigator>\n//   );\n// }\n\nexport default function App() {\n  const [result, setRes] = React.useState([])\n  return (\n    (result.length > 0) ? <><HomeScreen/></>:\n    <NavigationContainer theme={MyTheme}>\n      <Drawer.Navigator initialRouteName=\"Home\">\n        <Drawer.Screen name=\"Profile\" component={ProfileScreen} />\n        <Drawer.Screen\n          name=\"Projects\"\n          component={ProjectScreen}\n          options={{ headerShown: true }}\n        />\n        <Drawer.Screen\n          name=\"Charts\"\n          component={ChartScreen}\n          options={{ headerShown: true }}\n        />\n        {/* // <Drawer.Screen\n        //   name=\"Home\"\n        //   component={HomeScreen}\n        //   options={{ headerShown: true }}\n        // /> */}\n      </Drawer.Navigator>\n    </NavigationContainer>\n    \n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}