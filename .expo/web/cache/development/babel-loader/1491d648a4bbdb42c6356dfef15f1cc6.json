{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nhakkaou/Desktop/swift-companie/Componenets/Chart.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph } from \"react-native-chart-kit\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar screenWidth = Dimensions.get(\"window\").width;\n\nvar Chart = function Chart() {\n  var chartConfig = {\n    backgroundGradientFrom: \"#1E2923\",\n    backgroundGradientTo: \"#08130D\",\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return \"rgba(26, 255, 146, \" + opacity + \")\";\n    },\n    strokeWidth: 2,\n    barPercentage: 0.5,\n    useShadowColorFromDataset: true\n  };\n  var data = {\n    labels: [\"Graphics\", \"Algorithms & AI\", \"Imperative programming\", \"Rigor\", \"Unix\", \"Adaptation & creativity\", \"Network & system administration\", \"Organization\", \"Technology integration\", \"Company experience\"],\n    datasets: [{\n      data: [20, 45, 28, 80, 99, 43, 7, 8, 9, 15, 11],\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(134, 65, 244, \" + opacity + \")\";\n      },\n      strokeWidth: 1\n    }]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(LineChart, {\n    data: data,\n    width: screenWidth,\n    height: 220,\n    chartConfig: chartConfig,\n    accessor: \"population\",\n    backgroundColor: \"transparent\",\n    beizer: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/nhakkaou/Desktop/swift-companie/Componenets/Chart.js"],"names":["React","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","screenWidth","Dimensions","get","width","Chart","chartConfig","backgroundGradientFrom","backgroundGradientTo","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","data","labels","datasets","flex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SACEC,SADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,iBALF,QAMO,wBANP;;AAQA,IAAMC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,WAAW,GAAG;AAClBC,IAAAA,sBAAsB,EAAE,SADN;AAGlBC,IAAAA,oBAAoB,EAAE,SAHJ;AAKlBC,IAAAA,KAAK,EAAE;AAAA,UAACC,OAAD,uEAAW,CAAX;AAAA,qCAAuCA,OAAvC;AAAA,KALW;AAMlBC,IAAAA,WAAW,EAAE,CANK;AAOlBC,IAAAA,aAAa,EAAE,GAPG;AAQlBC,IAAAA,yBAAyB,EAAE;AART,GAApB;AAyFA,MAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CACN,UADM,EAEN,iBAFM,EAGN,wBAHM,EAIN,OAJM,EAKN,MALM,EAMN,yBANM,EAON,iCAPM,EAQN,cARM,EASN,wBATM,EAUN,oBAVM,CADG;AAaXC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,EAAlC,EAAsC,EAAtC,CADR;AAEEL,MAAAA,KAAK,EAAE;AAAA,YAACC,OAAD,uEAAW,CAAX;AAAA,uCAAuCA,OAAvC;AAAA,OAFT;AAGEC,MAAAA,WAAW,EAAE;AAHf,KADQ;AAbC,GAAb;AAqBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAEb,WAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,WAAW,EAAEK,WAJf;AAKE,IAAA,QAAQ,EAAC,YALX;AAME,IAAA,eAAe,EAAC,aANlB;AAOE,IAAA,MAAM,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CA5HD;;AA8HA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  LineChart,\n  BarChart,\n  PieChart,\n  ProgressChart,\n  ContributionGraph,\n} from \"react-native-chart-kit\";\nimport { Dimensions } from \"react-native\";\nconst screenWidth = Dimensions.get(\"window\").width;\nconst Chart = () => {\n  const chartConfig = {\n    backgroundGradientFrom: \"#1E2923\",\n    // backgroundGradientFromOpacity: 0,\n    backgroundGradientTo: \"#08130D\",\n    // backgroundGradientToOpacity: 0.5,\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\n    strokeWidth: 2, // optional, default 3\n    barPercentage: 0.5,\n    useShadowColorFromDataset: true, // optional\n  };\n  // const data = [\n  //   // {\n  //   //   name: \"Graphics\",\n  //   //   population: 21500000,\n  //   //   color: \"rgba(131, 167, 234, 1)\",\n  //   //   legendFontColor: \"#7F7F7F\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Algorithms & AI\",\n  //   //   population: 2800000,\n  //   //   color: \"#F00\",\n  //   //   legendFontColor: \"#7F7F7F\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Imperative programming\",\n  //   //   population: 527612,\n  //   //   color: \"red\",\n  //   //   legendFontColor: \"#7F7F15\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Rigor\",\n  //   //   population: 8538000,\n  //   //   color: \"#ffffff\",\n  //   //   legendFontColor: \"#7F7F02\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Unix\",\n  //   //   population: 11920000,\n  //   //   color: \"rgb(0, 0, 255)\",\n  //   //   legendFontColor: \"#7F7F15\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Unix\",\n  //   //   population: 11920000,\n  //   //   color: \"rgb(0, 0, 255)\",\n  //   //   legendFontColor: \"#7F7F00\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   // {\n  //   //   name: \"Adaptation & creativity\",\n  //   //   population: 11920000,\n  //   //   color: \"rgb(0, 0, 255)\",\n  //   //   legendFontColor: \"#7F7F71\",\n  //   //   // legendFontSize: 15,\n  //   // },\n  //   {\n  //     name: \"Network & system administration\",\n  //     population: 11920000,\n  //     color: \"rgb(0, 0, 255)\",\n  //     legendFontColor: \"#7F7F74\",\n  //     // legendFontSize: 15,\n  //   },\n  //   {\n  //     name: \"Organization\",\n  //     population: 11920000,\n  //     color: \"rgb(0, 0, 255)\",\n  //     legendFontColor: \"#7F7F70\",\n  //     // legendFontSize: 15,\n  //   },\n  //   {\n  //     name: \"Technology integration\",\n  //     population: 11920000,\n  //     color: \"rgb(0, 0, 255)\",\n  //     legendFontColor: \"#7F7F78\",\n  //     // legendFontSize: 15,\n  //   },\n  //   {\n  //     name: \"Company experience\",\n  //     population: 11920000,\n  //     color: \"rgb(0, 0, 255)\",\n  //     legendFontColor: \"#7F7F75\",\n  //     // legendFontSize: 15,\n  //   },\n  // ];\n  const data = {\n    labels: [\n      \"Graphics\",\n      \"Algorithms & AI\",\n      \"Imperative programming\",\n      \"Rigor\",\n      \"Unix\",\n      \"Adaptation & creativity\",\n      \"Network & system administration\",\n      \"Organization\",\n      \"Technology integration\",\n      \"Company experience\",\n    ],\n    datasets: [\n      {\n        data: [20, 45, 28, 80, 99, 43, 7, 8, 9, 15, 11],\n        color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, // optional\n        strokeWidth: 1, // optional\n      },\n    ],\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <LineChart\n        data={data}\n        width={screenWidth}\n        height={220}\n        chartConfig={chartConfig}\n        accessor=\"population\"\n        backgroundColor=\"transparent\"\n        beizer\n      />\n    </View>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}