{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Matrix2D from \"../Matrix2D\";\nimport _ from 'lodash';\nvar pooledMatrix = new Matrix2D();\n\nfunction transformToMatrix(props, transform) {\n  pooledMatrix.reset();\n  appendTransform(props);\n\n  if (transform) {\n    appendTransform(transform);\n  }\n\n  return pooledMatrix.toArray();\n}\n\nfunction appendTransform(transform) {\n  pooledMatrix.appendTransform(transform.x + transform.originX, transform.y + transform.originY, transform.scaleX, transform.scaleY, transform.rotation, transform.skewX, transform.skewY, transform.originX, transform.originY);\n}\n\nfunction universal2axis(universal, axisX, axisY, defaultValue) {\n  var coords = [];\n  var x;\n  var y;\n\n  if (_.isString(universal)) {\n    coords = universal.split(/\\s*,\\s*/);\n\n    if (coords.length === 2) {\n      x = +coords[0];\n      y = +coords[1];\n    } else if (coords.length === 1) {\n      x = y = +coords[0];\n    }\n  } else if (_.isNumber(universal)) {\n    x = y = universal;\n  }\n\n  axisX = +axisX;\n\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nfunction props2transform(props) {\n  var _universal2axis = universal2axis(props.origin, props.originX, props.originY),\n      _universal2axis2 = _slicedToArray(_universal2axis, 2),\n      originX = _universal2axis2[0],\n      originY = _universal2axis2[1];\n\n  var _universal2axis3 = universal2axis(props.scale, props.scaleX, props.scaleY, 1),\n      _universal2axis4 = _slicedToArray(_universal2axis3, 2),\n      scaleX = _universal2axis4[0],\n      scaleY = _universal2axis4[1];\n\n  var _universal2axis5 = universal2axis(props.skew, props.skewX, props.skewY),\n      _universal2axis6 = _slicedToArray(_universal2axis5, 2),\n      skewX = _universal2axis6[0],\n      skewY = _universal2axis6[1];\n\n  var _universal2axis7 = universal2axis(props.translate, _.isNil(props.translateX) ? props.x : props.translateX, _.isNil(props.translateY) ? props.y : props.translateY),\n      _universal2axis8 = _slicedToArray(_universal2axis7, 2),\n      translateX = _universal2axis8[0],\n      translateY = _universal2axis8[1];\n\n  return {\n    rotation: +props.rotation || +props.rotate || 0,\n    scaleX: scaleX,\n    scaleY: scaleY,\n    originX: originX,\n    originY: originY,\n    skewX: skewX,\n    skewY: skewY,\n    x: translateX,\n    y: translateY\n  };\n}\n\nexport default function (props) {\n  return transformToMatrix(props2transform(props), props.transform ? props2transform(props.transform) : null);\n}","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/node_modules/react-native-svg/lib/extract/extractTransform.js"],"names":["Matrix2D","_","pooledMatrix","transformToMatrix","props","transform","reset","appendTransform","toArray","x","originX","y","originY","scaleX","scaleY","rotation","skewX","skewY","universal2axis","universal","axisX","axisY","defaultValue","coords","isString","split","length","isNumber","isNaN","props2transform","origin","scale","skew","translate","isNil","translateX","translateY","rotate"],"mappings":"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","sourcesContent":["import Matrix2D from '../Matrix2D';\nimport _ from 'lodash';\nlet pooledMatrix = new Matrix2D();\n\nfunction transformToMatrix(props, transform) {\n    pooledMatrix.reset();\n    appendTransform(props);\n\n    if (transform) {\n        appendTransform(transform);\n    }\n\n    return pooledMatrix.toArray();\n}\n\nfunction appendTransform(transform) {\n    pooledMatrix\n        .appendTransform(\n            transform.x + transform.originX,\n            transform.y + transform.originY,\n            transform.scaleX, transform.scaleY,\n            transform.rotation,\n            transform.skewX,\n            transform.skewY,\n            transform.originX,\n            transform.originY\n        );\n}\n\nfunction universal2axis(universal, axisX, axisY, defaultValue) {\n    let coords = [];\n    let x;\n    let y;\n    if (_.isString(universal)) {\n        coords = universal.split(/\\s*,\\s*/);\n        if (coords.length === 2) {\n            x = +coords[0];\n            y = +coords[1];\n        } else if　(coords.length === 1)　{\n            x = y = +coords[0];\n        }\n    } else if (_.isNumber(universal)) {\n        x = y = universal;\n    }\n\n    axisX = +axisX;\n    if (!isNaN(axisX)) {\n        x = axisX;\n    }\n\n    axisY = +axisY;\n    if (!isNaN(axisY)) {\n        y = axisY;\n    }\n\n    return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nfunction props2transform(props) {\n    let [originX, originY] = universal2axis(props.origin, props.originX, props.originY);\n    let [scaleX, scaleY] = universal2axis(props.scale, props.scaleX, props.scaleY, 1);\n    let [skewX, skewY] = universal2axis(props.skew, props.skewX, props.skewY);\n    let [translateX, translateY] = universal2axis(\n        props.translate,\n        _.isNil(props.translateX) ? props.x : props.translateX,\n        _.isNil(props.translateY) ? props.y : props.translateY\n    );\n\n    return {\n        rotation: +props.rotation || +props.rotate || 0,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        originX: originX,\n        originY: originY,\n        skewX: skewX,\n        skewY: skewY,\n        x: translateX,\n        y: translateY\n    };\n}\n\nexport default function (props) {\n    return transformToMatrix(props2transform(props), props.transform ? props2transform(props.transform) : null);\n}\n"]},"metadata":{},"sourceType":"module"}