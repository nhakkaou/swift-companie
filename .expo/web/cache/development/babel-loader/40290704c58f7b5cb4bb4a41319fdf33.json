{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Line.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactText from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Svg, { G, Path, Rect, Text, Circle, Line } from 'react-native-svg';\nimport { Colors, Options, cyclic, fontAdapt } from \"./util\";\nimport Axis from \"./Axis\";\nimport GridAxis from \"./GridAxis\";\nimport _ from 'lodash';\n\nvar LineChart = function (_Component) {\n  _inherits(LineChart, _Component);\n\n  var _super = _createSuper(LineChart);\n\n  function LineChart(props, chartType) {\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    _this = _super.call(this, props);\n    _this.chartType = chartType;\n    _this.state = {\n      userPressing: false\n    };\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"_calcDataPoint\",\n    value: function _calcDataPoint(evt) {\n      var posX = evt.nativeEvent.locationX;\n      var posY = evt.nativeEvent.locationY;\n      posX -= this.props.options.margin.left;\n      posY -= this.props.options.margin.top;\n      var chartWidth = this.props.options.width;\n      posX = Math.max(posX, 0);\n      posX = Math.min(posX, chartWidth);\n      var curPos = Math.min(posX / chartWidth, 1);\n      var curPosX = posX;\n      this.curPos = curPos;\n      this.setState({\n        curPos: curPos\n      });\n      this.setState({\n        curPosX: curPosX\n      });\n      this.setState({\n        chartStartY: 0\n      });\n      this.setState({\n        chartEndY: this.props.options.height\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._panResponder = {};\n\n      if (!this.props.options.interaction) {\n        return;\n      }\n\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          _this2.setState({\n            userPressing: true\n          });\n\n          _this2._calcDataPoint(evt);\n\n          if (_this2.props.panHandlerStart) {\n            _this2.props.panHandlerStart(_this2.curPos);\n          }\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          _this2._calcDataPoint(evt);\n\n          if (_this2.props.panHandlerMove) {\n            _this2.props.panHandlerMove(_this2.curPos);\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          _this2._calcDataPoint(evt);\n\n          if (_this2.props.panHandlerEnd) {\n            _this2.props.panHandlerEnd(_this2.curPos);\n          }\n\n          _this2.setState({\n            userPressing: false\n          });\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n          return true;\n        },\n        onPanResponderTerminate: function onPanResponderTerminate(evt, gestureState) {\n          _this2._calcDataPoint(evt);\n\n          if (_this2.props.panHandlerEnd) {\n            _this2.props.panHandlerEnd(_this2.curPos);\n          }\n\n          _this2.setState({\n            userPressing: false\n          });\n        },\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n          return true;\n        }\n      });\n    }\n  }, {\n    key: \"getMaxAndMin\",\n    value: function getMaxAndMin(chart, key, scale, chartMin, chartMax) {\n      var maxValue;\n      var minValue;\n\n      _.each(chart.curves, function (serie) {\n        var values = _.map(serie.item, function (item) {\n          return item[key];\n        });\n\n        var max = _.max(values);\n\n        if (maxValue === undefined || max > maxValue) maxValue = max;\n\n        var min = _.min(values);\n\n        if (minValue === undefined || min < minValue) minValue = min;\n        maxValue = chartMax > maxValue ? chartMax : maxValue;\n        minValue = chartMin < minValue ? chartMin : minValue;\n      });\n\n      return {\n        minValue: minValue,\n        maxValue: maxValue,\n        min: scale(minValue),\n        max: scale(maxValue)\n      };\n    }\n  }, {\n    key: \"color\",\n    value: function color(i) {\n      var color = this.props.options.color;\n      if (!_.isString(this.props.options.color)) color = color.color;\n      var pallete = this.props.pallete || Colors.mix(color || '#9ac7f7');\n      return Colors.string(cyclic(pallete, i));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var noDataMsg = this.props.noDataMessage || 'No data available';\n      if (this.props.data === undefined) return React.createElement(ReactText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 47\n        }\n      }, noDataMsg);\n      var options = new Options(this.props);\n\n      var accessor = function accessor(key) {\n        return function (x) {\n          return x[key];\n        };\n      };\n\n      var chart = this.chartType({\n        data: this.props.data,\n        xaccessor: accessor(this.props.xKey),\n        yaccessor: accessor(this.props.yKey),\n        width: options.chartWidth,\n        height: options.chartHeight,\n        closed: false,\n        min: options.min,\n        max: options.max\n      });\n      var chartArea = {\n        x: this.getMaxAndMin(chart, this.props.xKey, chart.xscale),\n        y: this.getMaxAndMin(chart, this.props.yKey, chart.yscale, options.min, options.max),\n        margin: options.margin\n      };\n      var showAreas = typeof this.props.options.showAreas !== 'undefined' ? this.props.options.showAreas : true;\n      var strokeWidth = typeof this.props.options.strokeWidth !== 'undefined' ? this.props.options.strokeWidth : '1';\n      var strokeDasharray = typeof this.props.options.strokeDasharray !== 'undefined' ? this.props.options.strokeDasharray : [];\n      var strokeOpacity = typeof this.props.options.strokeOpacity !== 'undefined' ? this.props.options.strokeOpacity : 1;\n\n      var lines = _.map(chart.curves, function (c, i) {\n        var strokeWidthForCurve = typeof strokeWidth === 'function' && strokeWidth(c, i) || strokeWidth;\n        var strokeDasharrayForCurve = typeof strokeDasharray === 'function' && strokeDasharray(c, i) || strokeDasharray;\n        var strokeOpacityForCurve = typeof strokeOpacity === 'function' && strokeOpacity(c, i) || strokeOpacity;\n        return React.createElement(Path, {\n          key: 'lines' + i,\n          d: c.line.path.print(),\n          stroke: this.color(i),\n          strokeWidth: strokeWidthForCurve,\n          strokeOpacity: strokeOpacityForCurve,\n          fill: \"none\",\n          strokeDasharray: strokeDasharrayForCurve,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }\n        });\n      }.bind(this));\n\n      var gestureLine = null;\n      var color = 'white';\n      var width = 1;\n\n      if (this.props.options.cursorLine) {\n        if (this.props.options.cursorLine.stroke) color = this.props.options.cursorLine.stroke;\n\n        if (this.props.options.cursorLine.strokeWidth) {\n          width = this.props.options.cursorLine.strokeWidth;\n        }\n      }\n\n      if (this.state.userPressing && this.props.options.interaction) {\n        gestureLine = React.createElement(Line, {\n          x1: this.state.curPosX,\n          y1: this.state.chartStartY,\n          x2: this.state.curPosX,\n          y2: this.state.chartEndY,\n          stroke: color,\n          strokeWidth: width,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }\n        });\n      }\n\n      var areas = null;\n      var showPoints = typeof this.props.options.showPoints !== 'undefined' ? this.props.options.showPoints : false;\n      var points = !showPoints ? [] : _.map(chart.curves, function (c, graphIndex) {\n        return _.map(c.line.path.points(), function (p, pointIndex) {\n          var render = null;\n\n          if (typeof showPoints === 'function' && showPoints(graphIndex, pointIndex) || typeof showPoints === 'boolean' && showPoints) {\n            return React.createElement(G, {\n              key: 'k' + pointIndex,\n              x: p[0],\n              y: p[1],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }\n            }, typeof this.props.options.renderPoint === 'function' ? this.props.options.renderPoint(graphIndex, pointIndex) : React.createElement(Circle, {\n              fill: this.color(graphIndex),\n              cx: 0,\n              cy: 0,\n              r: this.props.options.pointRadius || 5,\n              fillOpacity: 1,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 27\n              }\n            }));\n          }\n        }.bind(this));\n      }.bind(this));\n\n      if (showAreas) {\n        areas = _.map(chart.curves, function (c, i) {\n          if (typeof showAreas === 'function' && showAreas(c, i) || typeof showAreas === 'boolean') return React.createElement(Path, {\n            key: 'areas' + i,\n            d: c.area.path.print(),\n            fillOpacity: 0.5,\n            stroke: \"none\",\n            fill: this.color(i),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }\n          });\n          return null;\n        }.bind(this));\n      }\n\n      var textStyle = fontAdapt(options.label);\n      var regions;\n\n      if (this.props.regions != 'undefined') {\n        var styling = typeof this.props.regionStyling != 'undefined' ? this.props.regionStyling : {};\n        var labelOffsetAllRegions = typeof styling.labelOffset != 'undefined' ? styling.labelOffset : {};\n        regions = _.map(this.props.regions, function (c, i) {\n          var x, y, height, width, y1, y2, labelX, labelY;\n          var labelOffset = typeof c.labelOffset != 'undefined' ? c.labelOffset : {};\n          var labelOffsetLeft = typeof labelOffsetAllRegions.left != 'undefined' ? typeof labelOffset.left != 'undefined' ? labelOffset.left : labelOffsetAllRegions.left : 20;\n          var labelOffsetTop = typeof labelOffsetAllRegions.top != 'undefined' ? typeof labelOffset.top != 'undefined' ? labelOffset.top : labelOffsetAllRegions.top : 0;\n          var fillOpacity = typeof styling.fillOpacity != 'undefined' ? typeof c.fillOpacity != 'undefined' ? c.fillOpacity : styling.fillOpacity : 0.5;\n          y1 = chart.yscale(c.from);\n          y2 = chart.yscale(c.to);\n          x = 0;\n          y = y1;\n          height = y2 - y1;\n          width = chartArea.x.max;\n          labelX = labelOffsetLeft;\n          labelY = y2 + labelOffsetTop;\n          var regionLabel = typeof c.label != 'undefined' ? React.createElement(Text, {\n            fontFamily: textStyle.fontFamily,\n            fontSize: textStyle.fontSize,\n            fontWeight: textStyle.fontWeight,\n            fontStyle: textStyle.fontStyle,\n            fill: textStyle.fill,\n            textAnchor: \"middle\",\n            x: labelX,\n            y: labelY,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }\n          }, c.label) : null;\n          return React.createElement(G, {\n            key: 'region' + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 13\n            }\n          }, React.createElement(Rect, {\n            key: 'region' + i,\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            fill: c.fill,\n            fillOpacity: fillOpacity,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }\n          }), regionLabel);\n        }.bind(this));\n      }\n\n      var returnValue = React.createElement(View, _extends({\n        width: options.width,\n        height: options.height\n      }, this._panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }\n      }), React.createElement(Svg, {\n        width: options.width,\n        height: options.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }\n      }, React.createElement(G, {\n        x: options.margin.left,\n        y: options.margin.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, React.createElement(GridAxis, {\n        key: \"grid-x\",\n        scale: chart.xscale,\n        options: options.axisX,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }), React.createElement(GridAxis, {\n        key: \"grid-y\",\n        scale: chart.yscale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }\n      }), regions, areas, lines, points, gestureLine, React.createElement(Axis, {\n        key: \"axis-x\",\n        scale: chart.xscale,\n        options: options.axisX,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      }), React.createElement(Axis, {\n        key: \"axis-y\",\n        scale: chart.yscale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }))));\n      return returnValue;\n    }\n  }]);\n\n  return LineChart;\n}(Component);\n\nexport { LineChart as default };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Line.js"],"names":["React","Component","Svg","G","Path","Rect","Text","Circle","Line","Colors","Options","cyclic","fontAdapt","Axis","GridAxis","_","LineChart","props","chartType","state","userPressing","evt","posX","nativeEvent","locationX","posY","locationY","options","margin","left","top","chartWidth","width","Math","max","min","curPos","curPosX","setState","chartStartY","chartEndY","height","_panResponder","interaction","PanResponder","create","onStartShouldSetPanResponder","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","_calcDataPoint","panHandlerStart","onPanResponderMove","panHandlerMove","onPanResponderRelease","panHandlerEnd","onPanResponderTerminationRequest","onPanResponderTerminate","onShouldBlockNativeResponder","chart","key","scale","chartMin","chartMax","maxValue","minValue","each","curves","serie","values","map","item","undefined","i","color","isString","pallete","mix","string","noDataMsg","noDataMessage","data","accessor","x","xaccessor","xKey","yaccessor","yKey","chartHeight","closed","chartArea","getMaxAndMin","xscale","y","yscale","showAreas","strokeWidth","strokeDasharray","strokeOpacity","lines","c","strokeWidthForCurve","strokeDasharrayForCurve","strokeOpacityForCurve","line","path","print","bind","gestureLine","cursorLine","stroke","areas","showPoints","points","graphIndex","p","pointIndex","render","renderPoint","pointRadius","area","textStyle","label","regions","styling","regionStyling","labelOffsetAllRegions","labelOffset","y1","y2","labelX","labelY","labelOffsetLeft","labelOffsetTop","fillOpacity","from","to","regionLabel","fontFamily","fontSize","fontWeight","fontStyle","fill","returnValue","panHandlers","axisX","axisY"],"mappings":"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","sourcesContent":["/*\nCopyright 2016 Capital One Services, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nSPDX-Copyright: Copyright (c) Capital One Services, LLC\nSPDX-License-Identifier: Apache-2.0\n*/\n\nimport React, { Component } from 'react';\nimport { Text as ReactText, View, PanResponder } from 'react-native';\nimport Svg, { G, Path, Rect, Text, Circle, Line } from 'react-native-svg';\nimport { Colors, Options, cyclic, fontAdapt } from './util';\nimport Axis from './Axis';\nimport GridAxis from './GridAxis';\nimport _ from 'lodash';\n\nexport default class LineChart extends Component {\n  constructor(props, chartType) {\n    super(props);\n    this.chartType = chartType;\n    this.state = { userPressing: false};\n  }\n\n  _calcDataPoint(evt) {\n    let posX = evt.nativeEvent.locationX;\n    let posY = evt.nativeEvent.locationY;\n    posX -= this.props.options.margin.left;\n    posY -= this.props.options.margin.top;\n\n    let chartWidth = this.props.options.width;\n\n    posX = Math.max(posX, 0);\n    posX = Math.min(posX, chartWidth);\n    // map the datapoint index with the gesture:\n    let curPos = Math.min(posX / chartWidth, 1);\n\n    // create a 'focus' line\n    let curPosX = posX;\n    this.curPos = curPos;\n    this.setState({curPos});\n    this.setState({curPosX});\n    this.setState({chartStartY: 0});\n    this.setState({chartEndY: this.props.options.height});\n  }\n\n  componentWillMount() {\n    this._panResponder = {};\n    if (!this.props.options.interaction) {return;}\n    this._panResponder = PanResponder.create({\n      // Ask to be the responder:\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n\n      onPanResponderGrant: (evt, gestureState) => {\n\n        this.setState({userPressing: true});\n        this._calcDataPoint(evt)\n\n        if (this.props.panHandlerStart) {\n          this.props.panHandlerStart(this.curPos);\n        }\n      },\n\n      onPanResponderMove: (evt, gestureState) => {\n\n        this._calcDataPoint(evt);\n        if (this.props.panHandlerMove) {\n          this.props.panHandlerMove(this.curPos);\n        }\n      },\n\n      onPanResponderRelease: (evt, gestureState) => {\n\n        this._calcDataPoint(evt);\n        if (this.props.panHandlerEnd) {\n          this.props.panHandlerEnd(this.curPos);\n        }\n\n        this.setState({userPressing: false});\n      },\n\n      onPanResponderTerminationRequest: (evt, gestureState) => true,\n\n\n      onPanResponderTerminate: (evt, gestureState) => {\n\n        this._calcDataPoint(evt);\n        if (this.props.panHandlerEnd) {\n          this.props.panHandlerEnd(this.curPos);\n        }\n\n        this.setState({userPressing: false});\n      },\n\n      onShouldBlockNativeResponder: (evt, gestureState) => {\n        return true;\n      },\n    });\n  }\n\n  getMaxAndMin(chart, key, scale, chartMin, chartMax) {\n    let maxValue;\n    let minValue;\n    _.each(chart.curves, function(serie) {\n      let values = _.map(serie.item, function(item) {\n        return item[key];\n      });\n\n      let max = _.max(values);\n      if (maxValue === undefined || max > maxValue) maxValue = max;\n      let min = _.min(values);\n      if (minValue === undefined || min < minValue) minValue = min;\n\n      maxValue = chartMax > maxValue ? chartMax : maxValue;\n      minValue = chartMin < minValue ? chartMin : minValue;\n    });\n\n    return {\n      minValue: minValue,\n      maxValue: maxValue,\n      min: scale(minValue),\n      max: scale(maxValue),\n    };\n  }\n\n  color(i) {\n    let color = this.props.options.color;\n    if (!_.isString(this.props.options.color)) color = color.color;\n    let pallete = this.props.pallete || Colors.mix(color || '#9ac7f7');\n    return Colors.string(cyclic(pallete, i));\n  }\n\n  render() {\n    const noDataMsg = this.props.noDataMessage || 'No data available';\n    if (this.props.data === undefined) return <ReactText>{noDataMsg}</ReactText>;\n\n    let options = new Options(this.props);\n\n    let accessor = function(key) {\n      return function(x) {\n        return x[key];\n      };\n    };\n\n    let chart = this.chartType({\n      data: this.props.data,\n      xaccessor: accessor(this.props.xKey),\n      yaccessor: accessor(this.props.yKey),\n      width: options.chartWidth,\n      height: options.chartHeight,\n      closed: false,\n      min: options.min,\n      max: options.max,\n    });\n\n    let chartArea = {\n      x: this.getMaxAndMin(chart, this.props.xKey, chart.xscale),\n      y: this.getMaxAndMin(chart, this.props.yKey, chart.yscale, options.min, options.max),\n      margin: options.margin,\n    };\n\n    let showAreas = typeof this.props.options.showAreas !== 'undefined'\n      ? this.props.options.showAreas\n      : true;\n    let strokeWidth = typeof this.props.options.strokeWidth !== 'undefined'\n      ? this.props.options.strokeWidth\n      : '1';\n    let strokeDasharray = typeof this.props.options.strokeDasharray !== 'undefined'\n      ? this.props.options.strokeDasharray\n      : [];\n    let strokeOpacity = typeof this.props.options.strokeOpacity !== 'undefined'\n      ? this.props.options.strokeOpacity\n      : 1;\n    let lines = _.map(\n      chart.curves,\n      function(c, i) {\n        const strokeWidthForCurve =\n          (typeof strokeWidth === 'function' && strokeWidth(c, i)) || strokeWidth;\n        const strokeDasharrayForCurve =\n          (typeof strokeDasharray === 'function' && strokeDasharray(c, i)) || strokeDasharray;\n        const strokeOpacityForCurve =\n          (typeof strokeOpacity === 'function' && strokeOpacity(c, i)) || strokeOpacity;\n        return (\n          <Path\n            key={'lines' + i}\n            d={c.line.path.print()}\n            stroke={this.color(i)}\n            strokeWidth={strokeWidthForCurve}\n            strokeOpacity={strokeOpacityForCurve}\n            fill=\"none\"\n            strokeDasharray={strokeDasharrayForCurve}\n          />\n        );\n      }.bind(this)\n    );\n\n    // gesture line here\n    let gestureLine = null;\n    let color = 'white';\n    let width = 1;\n    if (this.props.options.cursorLine ) {\n      if (this.props.options.cursorLine.stroke)\n        color = this.props.options.cursorLine.stroke;\n      if (this.props.options.cursorLine.strokeWidth) {\n        width =this.props.options.cursorLine.strokeWidth;\n      }\n    }\n    if (this.state.userPressing\n      && this.props.options.interaction) {\n      gestureLine = <Line\n        x1={this.state.curPosX}\n        y1={this.state.chartStartY}\n        x2={this.state.curPosX}\n        y2={this.state.chartEndY}\n        stroke={color}\n        strokeWidth={width}\n\n      />\n    }\n\n    let areas = null;\n\n    let showPoints = typeof this.props.options.showPoints !== 'undefined'\n      ? this.props.options.showPoints\n      : false;\n    let points = !showPoints\n      ? []\n      : _.map(\n          chart.curves,\n          function(c, graphIndex) {\n            return _.map(\n              c.line.path.points(),\n              function(p, pointIndex) {\n                let render = null;\n                if (\n                  (typeof showPoints === 'function' && showPoints(graphIndex, pointIndex)) ||\n                  (typeof showPoints === 'boolean' && showPoints)\n                ) {\n                  return (\n                    <G key={'k' + pointIndex} x={p[0]} y={p[1]}>\n                      {typeof this.props.options.renderPoint === 'function'\n                        ? this.props.options.renderPoint(graphIndex, pointIndex)\n                        : <Circle\n                            fill={this.color(graphIndex)}\n                            cx={0}\n                            cy={0}\n                            r={this.props.options.pointRadius || 5}\n                            fillOpacity={1}\n                          />}\n                    </G>\n                  );\n                }\n              }.bind(this)\n            );\n          }.bind(this)\n        );\n\n    if (showAreas) {\n      areas = _.map(\n        chart.curves,\n        function(c, i) {\n          if (\n            (typeof showAreas === 'function' && showAreas(c, i)) ||\n            typeof showAreas === 'boolean'\n          )\n            return (\n              <Path\n                key={'areas' + i}\n                d={c.area.path.print()}\n                fillOpacity={0.5}\n                stroke=\"none\"\n                fill={this.color(i)}\n              />\n            );\n\n          return null;\n        }.bind(this)\n      );\n    }\n\n    let textStyle = fontAdapt(options.label);\n    let regions;\n    if (this.props.regions != 'undefined') {\n      let styling = typeof this.props.regionStyling != 'undefined' ? this.props.regionStyling : {};\n      let labelOffsetAllRegions = typeof styling.labelOffset != 'undefined'\n        ? styling.labelOffset\n        : {};\n\n      regions = _.map(\n        this.props.regions,\n        function(c, i) {\n          let x, y, height, width, y1, y2, labelX, labelY;\n\n          let labelOffset = typeof c.labelOffset != 'undefined' ? c.labelOffset : {};\n          let labelOffsetLeft = typeof labelOffsetAllRegions.left != 'undefined'\n            ? typeof labelOffset.left != 'undefined' ? labelOffset.left : labelOffsetAllRegions.left\n            : 20;\n          let labelOffsetTop = typeof labelOffsetAllRegions.top != 'undefined'\n            ? typeof labelOffset.top != 'undefined' ? labelOffset.top : labelOffsetAllRegions.top\n            : 0;\n          let fillOpacity = typeof styling.fillOpacity != 'undefined'\n            ? typeof c.fillOpacity != 'undefined' ? c.fillOpacity : styling.fillOpacity\n            : 0.5;\n\n          y1 = chart.yscale(c.from);\n          y2 = chart.yscale(c.to);\n\n          x = 0;\n          y = y1;\n          height = y2 - y1;\n          width = chartArea.x.max;\n\n          labelX = labelOffsetLeft;\n          labelY = y2 + labelOffsetTop;\n\n          let regionLabel = typeof c.label != 'undefined'\n            ? <Text\n                fontFamily={textStyle.fontFamily}\n                fontSize={textStyle.fontSize}\n                fontWeight={textStyle.fontWeight}\n                fontStyle={textStyle.fontStyle}\n                fill={textStyle.fill}\n                textAnchor=\"middle\"\n                x={labelX}\n                y={labelY}\n              >\n                {c.label}\n              </Text>\n            : null;\n\n          return (\n            <G key={'region' + i}>\n              <Rect\n                key={'region' + i}\n                x={x}\n                y={y}\n                width={width}\n                height={height}\n                fill={c.fill}\n                fillOpacity={fillOpacity}\n              />\n              {regionLabel}\n            </G>\n          );\n        }.bind(this)\n      );\n    }\n\n    let returnValue = (\n      <View width={options.width} height={options.height} {...this._panResponder.panHandlers}>\n        <Svg width={options.width} height={options.height}>\n          <G x={options.margin.left} y={options.margin.top}>\n            <GridAxis key=\"grid-x\" scale={chart.xscale} options={options.axisX} chartArea={chartArea} />\n            <GridAxis key=\"grid-y\" scale={chart.yscale} options={options.axisY} chartArea={chartArea} />\n            {regions}\n            {areas}\n            {lines}\n            {points}\n            {gestureLine}\n            <Axis key=\"axis-x\" scale={chart.xscale} options={options.axisX} chartArea={chartArea} />\n            <Axis key=\"axis-y\" scale={chart.yscale} options={options.axisY} chartArea={chartArea} />\n          </G>\n        </Svg>\n      </View>\n    );\n\n    return returnValue;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}