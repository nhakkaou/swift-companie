{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/node_modules/react-native-svg/elements/Svg.js\";\nvar _excluded = [\"opacity\", \"width\", \"height\", \"viewBox\", \"preserveAspectRatio\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport extractViewBox from \"../lib/extract/extractViewBox\";\nimport { ViewBoxAttributes } from \"../lib/attributes\";\nvar RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\nvar id = 0;\nvar styles = StyleSheet.create({\n  svg: {\n    backgroundColor: 'transparent'\n  }\n});\n\nvar Svg = function (_Component) {\n  _inherits(Svg, _Component);\n\n  var _super = _createSuper(Svg);\n\n  function Svg() {\n    var _this;\n\n    _classCallCheck(this, Svg);\n\n    _this = _super.apply(this, arguments);\n\n    _this.measureInWindow = function () {\n      var _this$root;\n\n      (_this$root = _this.root).measureInWindow.apply(_this$root, arguments);\n    };\n\n    _this.measure = function () {\n      var _this$root2;\n\n      (_this$root2 = _this.root).measure.apply(_this$root2, arguments);\n    };\n\n    _this.measureLayout = function () {\n      var _this$root3;\n\n      (_this$root3 = _this.root).measureLayout.apply(_this$root3, arguments);\n    };\n\n    _this.setNativeProps = function () {\n      var _this$root4;\n\n      (_this$root4 = _this.root).setNativeProps.apply(_this$root4, arguments);\n    };\n\n    _this.toDataURL = function (callback) {\n      callback && RNSVGSvgViewManager.toDataURL(findNodeHandle(_this.root), callback);\n    };\n\n    id++;\n    _this.id = id;\n    _this.onDataURLCallbacks = [];\n    return _this;\n  }\n\n  _createClass(Svg, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          opacity = _this$props.opacity,\n          width = _this$props.width,\n          height = _this$props.height,\n          viewBox = _this$props.viewBox,\n          preserveAspectRatio = _this$props.preserveAspectRatio,\n          style = _this$props.style,\n          props = _objectWithoutProperties(_this$props, _excluded);\n\n      var dimensions;\n\n      if (width && height) {\n        dimensions = {\n          width: +width,\n          height: +height,\n          flex: 0\n        };\n      }\n\n      return React.createElement(NativeSvgView, _extends({}, props, extractViewBox({\n        viewBox: viewBox,\n        preserveAspectRatio: preserveAspectRatio\n      }), {\n        ref: function ref(ele) {\n          _this2.root = ele;\n        },\n        style: [styles.svg, style, !isNaN(+opacity) && {\n          opacity: +opacity\n        }, dimensions],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 16\n        }\n      }));\n    }\n  }]);\n\n  return Svg;\n}(Component);\n\nSvg.displayName = 'Svg';\nSvg.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  viewBox: PropTypes.string,\n  preserveAspectRatio: PropTypes.string\n});\nSvg.defaultProps = {\n  preserveAspectRatio: 'xMidYMid meet'\n};\nvar NativeSvgView = requireNativeComponent('RNSVGSvgView', null, {\n  nativeOnly: _objectSpread({}, ViewBoxAttributes)\n});\nexport default Svg;","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/node_modules/react-native-svg/elements/Svg.js"],"names":["React","Component","PropTypes","ViewPropTypes","requireNativeComponent","extractViewBox","ViewBoxAttributes","RNSVGSvgViewManager","NativeModules","id","styles","StyleSheet","create","svg","backgroundColor","Svg","arguments","measureInWindow","root","measure","measureLayout","setNativeProps","toDataURL","callback","findNodeHandle","onDataURLCallbacks","props","opacity","width","height","viewBox","preserveAspectRatio","style","dimensions","flex","ele","isNaN","displayName","propTypes","oneOfType","string","number","defaultProps","NativeSvgView","nativeOnly"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ViewPropTypes,\n    requireNativeComponent,\n    StyleSheet,\n    findNodeHandle,\n    NativeModules\n} from 'react-native';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport {ViewBoxAttributes} from '../lib/attributes';\n\nconst RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\n\n// Svg - Root node of all Svg elements\nlet id = 0;\n\nconst styles = StyleSheet.create({\n    svg: {\n        backgroundColor: 'transparent'\n    }\n});\n\nclass Svg extends Component{\n    static displayName = 'Svg';\n    static propTypes = {\n        ...ViewPropTypes,\n        opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        // more detail https://svgwg.org/svg2-draft/coords.html#ViewBoxAttribute\n        viewBox: PropTypes.string,\n        preserveAspectRatio: PropTypes.string\n    };\n\n    static defaultProps = {\n        preserveAspectRatio: 'xMidYMid meet'\n    };\n\n    constructor() {\n        super(...arguments);\n        id++;\n        this.id = id;\n        this.onDataURLCallbacks = [];\n    }\n    measureInWindow = (...args) => {\n        this.root.measureInWindow(...args);\n    };\n\n    measure = (...args) => {\n        this.root.measure(...args);\n    };\n\n    measureLayout = (...args) => {\n        this.root.measureLayout(...args);\n    };\n\n    setNativeProps = (...args) => {\n        this.root.setNativeProps(...args);\n    };\n\n    toDataURL = (callback: Function) => {\n        callback && RNSVGSvgViewManager.toDataURL(findNodeHandle(this.root), callback);\n    };\n\n    render() {\n        const {opacity, width, height, viewBox, preserveAspectRatio, style, ...props} = this.props;\n        let dimensions;\n\n        if (width && height) {\n            dimensions = {\n                width: +width,\n                height: +height,\n                flex: 0\n            };\n        }\n\n        return <NativeSvgView\n            {...props}\n            {...extractViewBox({ viewBox, preserveAspectRatio })}\n            ref={ele => {this.root = ele;}}\n            style={[\n                styles.svg,\n                style,\n                !isNaN(+opacity) && {\n                    opacity: +opacity\n                },\n                dimensions\n            ]}\n        />;\n    }\n}\n\nconst NativeSvgView = requireNativeComponent('RNSVGSvgView', null, {\n    nativeOnly: {\n        ...ViewBoxAttributes\n    }\n});\n\nexport default Svg;\n"]},"metadata":{},"sourceType":"module"}