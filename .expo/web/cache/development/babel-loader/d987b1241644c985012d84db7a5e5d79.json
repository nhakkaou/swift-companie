{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nvar numberProp = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\nvar touchableProps = {\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLongPress: PropTypes.func,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number\n};\nvar responderProps = [].concat(_toConsumableArray(Object.keys(PanResponder.create({}).panHandlers)), ['pointerEvents']).reduce(function (props, name) {\n  props[name] = PropTypes.func;\n  return props;\n}, {});\nvar fillProps = {\n  fill: PropTypes.string,\n  fillOpacity: numberProp,\n  fillRule: PropTypes.oneOf(['evenodd', 'nonzero'])\n};\nvar clipProps = {\n  clipRule: PropTypes.oneOf(['evenodd', 'nonzero']),\n  clipPath: PropTypes.string\n};\nvar definationProps = {\n  name: PropTypes.string\n};\nvar strokeProps = {\n  stroke: PropTypes.string,\n  strokeWidth: numberProp,\n  strokeOpacity: numberProp,\n  strokeDasharray: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.string]),\n  strokeDashoffset: numberProp,\n  strokeLinecap: PropTypes.oneOf(['butt', 'square', 'round']),\n  strokeLinejoin: PropTypes.oneOf(['miter', 'bevel', 'round']),\n  strokeMiterlimit: numberProp\n};\nvar fontProps = {\n  fontFamily: PropTypes.string,\n  fontSize: numberProp,\n  fontWeight: numberProp,\n  fontStyle: PropTypes.string,\n  font: PropTypes.object\n};\nvar transformProps = {\n  scale: numberProp,\n  scaleX: numberProp,\n  scaleY: numberProp,\n  rotate: numberProp,\n  rotation: numberProp,\n  translate: numberProp,\n  translateX: numberProp,\n  translateY: numberProp,\n  x: numberProp,\n  y: numberProp,\n  origin: numberProp,\n  originX: numberProp,\n  originY: numberProp,\n  skew: numberProp,\n  skewX: numberProp,\n  skewY: numberProp,\n  transform: PropTypes.object\n};\n\nvar pathProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, fillProps), strokeProps), clipProps), transformProps), responderProps), touchableProps), definationProps);\n\nexport { numberProp, fillProps, strokeProps, fontProps, clipProps, pathProps, responderProps, touchableProps };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/node_modules/react-native-svg/lib/props.js"],"names":["PropTypes","numberProp","oneOfType","string","number","touchableProps","disabled","bool","onPress","func","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","responderProps","Object","keys","PanResponder","create","panHandlers","reduce","props","name","fillProps","fill","fillOpacity","fillRule","oneOf","clipProps","clipRule","clipPath","definationProps","strokeProps","stroke","strokeWidth","strokeOpacity","strokeDasharray","arrayOf","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","fontProps","fontFamily","fontSize","fontWeight","fontStyle","font","object","transformProps","scale","scaleX","scaleY","rotate","rotation","translate","translateX","translateY","x","y","origin","originX","originY","skew","skewX","skewY","transform","pathProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {PanResponder} from 'react-native';\n\nconst numberProp = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nconst touchableProps = {\n    disabled: PropTypes.bool,\n    onPress: PropTypes.func,\n    onPressIn: PropTypes.func,\n    onPressOut: PropTypes.func,\n    onLongPress: PropTypes.func,\n    delayPressIn: PropTypes.number,\n    delayPressOut: PropTypes.number,\n    delayLongPress: PropTypes.number\n};\n\nconst responderProps =  [\n    ...Object.keys(PanResponder.create({}).panHandlers),\n    'pointerEvents'\n].reduce((props, name) => {\n    props[name] = PropTypes.func;\n    return props;\n}, {});\n\nconst fillProps = {\n    fill: PropTypes.string,\n    fillOpacity: numberProp,\n    fillRule: PropTypes.oneOf(['evenodd', 'nonzero'])\n};\n\nconst clipProps = {\n    clipRule: PropTypes.oneOf(['evenodd', 'nonzero']),\n    clipPath: PropTypes.string\n};\n\nconst definationProps = {\n    name: PropTypes.string\n};\n\nconst strokeProps = {\n    stroke: PropTypes.string,\n    strokeWidth: numberProp,\n    strokeOpacity: numberProp,\n    strokeDasharray: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.string]),\n    strokeDashoffset: numberProp,\n    strokeLinecap: PropTypes.oneOf(['butt', 'square', 'round']),\n    strokeLinejoin: PropTypes.oneOf(['miter', 'bevel', 'round']),\n    strokeMiterlimit: numberProp\n};\n\nconst fontProps = {\n    fontFamily: PropTypes.string,\n    fontSize: numberProp,\n    fontWeight: numberProp,\n    fontStyle: PropTypes.string,\n    font: PropTypes.object\n};\n\nconst transformProps = {\n    scale: numberProp,\n    scaleX: numberProp,\n    scaleY: numberProp,\n    rotate: numberProp,\n    rotation: numberProp,\n    translate: numberProp,\n    translateX: numberProp,\n    translateY: numberProp,\n    x: numberProp,\n    y: numberProp,\n    origin: numberProp,\n    originX: numberProp,\n    originY: numberProp,\n    skew: numberProp,\n    skewX: numberProp,\n    skewY: numberProp,\n    transform: PropTypes.object\n};\n\nconst pathProps = {\n    ...fillProps,\n    ...strokeProps,\n    ...clipProps,\n    ...transformProps,\n    ...responderProps,\n    ...touchableProps,\n    ...definationProps\n};\n\nexport {\n    numberProp,\n    fillProps,\n    strokeProps,\n    fontProps,\n    clipProps,\n    pathProps,\n    responderProps,\n    touchableProps\n};\n"]},"metadata":{},"sourceType":"module"}