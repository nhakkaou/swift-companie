{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js';\nimport { ViewBoxAttributes } from \"../attributes\";\nvar meetOrSliceTypes = {\n  meet: 0,\n  slice: 1,\n  none: 2\n};\nvar alignEnum = ['xMinYMin', 'xMidYMin', 'xMaxYMin', 'xMinYMid', 'xMidYMid', 'xMaxYMid', 'xMinYMax', 'xMidYMax', 'xMaxYMax', 'none'].reduce(function (prev, name) {\n  prev[name] = name;\n  return prev;\n}, {});\nvar spacesRegExp = /\\s+/;\nexport default function (props) {\n  var viewBox = props.viewBox,\n      preserveAspectRatio = props.preserveAspectRatio;\n\n  if (!viewBox) {\n    return null;\n  }\n\n  var params = viewBox.trim().split(spacesRegExp);\n\n  if (params.length === 4 && params.every(function (param) {\n    return !isNaN(+params);\n  })) {\n    console.warn('Invalid `viewBox` prop:' + viewBox);\n    return null;\n  }\n\n  var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];\n  var meetOrSlice = meetOrSliceTypes[modes[1]] || 0;\n  var align = alignEnum[modes[0]] || 'xMidYMid';\n  return {\n    minX: +params[0],\n    minY: +params[1],\n    vbWidth: +params[2],\n    vbHeight: +params[3],\n    align: align,\n    meetOrSlice: meetOrSlice\n  };\n}\nexport { meetOrSliceTypes, alignEnum };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/node_modules/react-native-svg/lib/extract/extractViewBox.js"],"names":["React","Component","PropTypes","createReactNativeComponentClass","ViewBoxAttributes","meetOrSliceTypes","meet","slice","none","alignEnum","reduce","prev","name","spacesRegExp","props","viewBox","preserveAspectRatio","params","trim","split","length","every","param","isNaN","console","warn","modes","meetOrSlice","align","minX","minY","vbWidth","vbHeight"],"mappings":"AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,+BAAP,MAA4C,0EAA5C;AACA,SAAQC,iBAAR;AAEA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAE,CADe;AAErBC,EAAAA,KAAK,EAAE,CAFc;AAGrBC,EAAAA,IAAI,EAAE;AAHe,CAAzB;AAMA,IAAMC,SAAS,GAAG,CACd,UADc,EACF,UADE,EACU,UADV,EAEd,UAFc,EAEF,UAFE,EAEU,UAFV,EAGd,UAHc,EAGF,UAHE,EAGU,UAHV,EAId,MAJc,EAKhBC,MALgB,CAKT,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrBD,EAAAA,IAAI,CAACC,IAAD,CAAJ,GAAaA,IAAb;AACA,SAAOD,IAAP;AACH,CARiB,EAQf,EARe,CAAlB;AAUA,IAAME,YAAY,GAAG,KAArB;AAEA,eAAe,UAAUC,KAAV,EAAiB;AAC5B,MAAOC,OAAP,GAAuCD,KAAvC,CAAOC,OAAP;AAAA,MAAgBC,mBAAhB,GAAuCF,KAAvC,CAAgBE,mBAAhB;;AAEA,MAAI,CAACD,OAAL,EAAc;AACV,WAAO,IAAP;AACH;;AAED,MAAIE,MAAM,GAAGF,OAAO,CAACG,IAAR,GAAeC,KAAf,CAAqBN,YAArB,CAAb;;AAEA,MAAII,MAAM,CAACG,MAAP,KAAkB,CAAlB,IAAwBH,MAAM,CAACI,KAAP,CAAa,UAAAC,KAAK;AAAA,WAAI,CAACC,KAAK,CAAC,CAACN,MAAF,CAAV;AAAA,GAAlB,CAA5B,EAAoE;AAChEO,IAAAA,OAAO,CAACC,IAAR,CAAa,4BAA4BV,OAAzC;AACA,WAAO,IAAP;AACH;;AAED,MAAIW,KAAK,GAAGV,mBAAmB,GAAGA,mBAAmB,CAACE,IAApB,GAA2BC,KAA3B,CAAiCN,YAAjC,CAAH,GAAoD,EAAnF;AAEA,MAAIc,WAAW,GAAGtB,gBAAgB,CAACqB,KAAK,CAAC,CAAD,CAAN,CAAhB,IAA8B,CAAhD;AACA,MAAIE,KAAK,GAAGnB,SAAS,CAACiB,KAAK,CAAC,CAAD,CAAN,CAAT,IAAuB,UAAnC;AAEA,SAAO;AACHG,IAAAA,IAAI,EAAE,CAACZ,MAAM,CAAC,CAAD,CADV;AAEHa,IAAAA,IAAI,EAAE,CAACb,MAAM,CAAC,CAAD,CAFV;AAGHc,IAAAA,OAAO,EAAE,CAACd,MAAM,CAAC,CAAD,CAHb;AAIHe,IAAAA,QAAQ,EAAE,CAACf,MAAM,CAAC,CAAD,CAJd;AAKHW,IAAAA,KAAK,EAALA,KALG;AAMHD,IAAAA,WAAW,EAAXA;AANG,GAAP;AAQH;AAED,SACItB,gBADJ,EAEII,SAFJ","sourcesContent":["\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport createReactNativeComponentClass from 'react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js';\nimport {ViewBoxAttributes} from '../attributes';\n\nconst meetOrSliceTypes = {\n    meet: 0,\n    slice: 1,\n    none: 2\n};\n\nconst alignEnum = [\n    'xMinYMin', 'xMidYMin', 'xMaxYMin',\n    'xMinYMid', 'xMidYMid', 'xMaxYMid',\n    'xMinYMax', 'xMidYMax', 'xMaxYMax',\n    'none'\n].reduce((prev, name) => {\n    prev[name] = name;\n    return prev;\n}, {});\n\nconst spacesRegExp = /\\s+/;\n\nexport default function (props) {\n    const {viewBox, preserveAspectRatio} = props;\n\n    if (!viewBox) {\n        return null;\n    }\n\n    let params = viewBox.trim().split(spacesRegExp);\n\n    if (params.length === 4 &&  params.every(param => !isNaN(+params))) {\n        console.warn('Invalid `viewBox` prop:' + viewBox);\n        return null;\n    }\n\n    let modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];\n\n    let meetOrSlice = meetOrSliceTypes[modes[1]] || 0;\n    let align = alignEnum[modes[0]] || 'xMidYMid';\n\n    return {\n        minX: +params[0],\n        minY: +params[1],\n        vbWidth: +params[2],\n        vbHeight: +params[3],\n        align,\n        meetOrSlice\n    }\n}\n\nexport {\n    meetOrSliceTypes,\n    alignEnum\n};\n"]},"metadata":{},"sourceType":"module"}