{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/App.js\";\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ProfileScreen, ProjectScreen, ChartScreen, HomeScreen } from \"./Views\";\nimport axios from \"axios\";\nimport { Icon } from \"react-native-elements\";\nvar darkTheme = {\n  dark: true,\n  colors: {\n    primary: \"rgb(255, 45, 85)\",\n    background: \"#000\",\n    card: \"#292D39\",\n    text: \"white\",\n    border: \"#292D39\",\n    notification: \"rgb(255, 69, 58)\"\n  }\n};\nvar uid = \"8b3f2aa1e1b4e9ea2ed2399b3783dba79813b948c9ecbb9555f7927a7b530e0a\";\nvar client = \"fdf4044597bc43b22cf442e825051dda952c834d1d16d8aebfdb6c223df3a37d\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      token = _React$useState2[0],\n      setToken = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      delay = _React$useState4[0],\n      setDelay = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dark = _React$useState6[0],\n      setDark = _React$useState6[1];\n\n  React.useEffect(function () {\n    axios.post(\"https://api.intra.42.fr/oauth/token\", {\n      grant_type: \"client_credentials\",\n      client_id: uid,\n      client_secret: client\n    }).then(function (tk) {\n      return setToken(tk == null ? void 0 : tk.data.access_token);\n    });\n  }, []);\n  setInterval(function () {\n    axios.post(\"https://api.intra.42.fr/oauth/token\", {\n      grant_type: \"client_credentials\",\n      client_id: uid,\n      client_secret: client\n    }).then(function (tk) {\n      setToken(tk == null ? void 0 : tk.data.access_token);\n      console.log(tk.data);\n    });\n  });\n  console.log(dark);\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      result = _React$useState8[0],\n      setRes = _React$useState8[1];\n\n  return result.length === 0 ? React.createElement(HomeScreen, {\n    set: setRes,\n    token: token,\n    theme: dark,\n    setTheme: setDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }) : React.createElement(NavigationContainer, {\n    theme: dark ? darkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: function component() {\n      return React.createElement(ProfileScreen, {\n        result: result,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }\n      });\n    },\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(Icon, {\n          type: \"font-awesome-5\",\n          name: \"sign-out-alt\",\n          color: \"#000\",\n          onPress: function onPress() {\n            return setRes([]);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        });\n      },\n      result: result\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Projects\",\n    component: ProjectScreen,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(Icon, {\n          type: \"font-awesome-5\",\n          name: \"sign-out-alt\",\n          color: \"#000\",\n          onPress: function onPress() {\n            return setRes([]);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Charts\",\n    component: ChartScreen,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(Icon, {\n          type: \"font-awesome-5\",\n          name: \"sign-out-alt\",\n          color: \"#000\",\n          onPress: function onPress() {\n            return setRes([]);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/App.js"],"names":["React","NavigationContainer","DefaultTheme","createNativeStackNavigator","createDrawerNavigator","ProfileScreen","ProjectScreen","ChartScreen","HomeScreen","axios","Icon","darkTheme","dark","colors","primary","background","card","text","border","notification","uid","client","Drawer","App","useState","token","setToken","delay","setDelay","setDark","useEffect","post","grant_type","client_id","client_secret","then","tk","data","access_token","setInterval","console","log","result","setRes","length","headerRight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Button, View, Text } from \"react-native\";\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { ProfileScreen, ProjectScreen, ChartScreen, HomeScreen } from \"./Views\";\r\nimport axios from \"axios\";\r\nimport { Icon } from \"react-native-elements\";\r\nconst darkTheme = {\r\n  dark: true,\r\n  colors: {\r\n    primary: \"rgb(255, 45, 85)\",\r\n    background: \"#000\",\r\n    card: \"#292D39\",\r\n    text: \"white\",\r\n    border: \"#292D39\",\r\n    notification: \"rgb(255, 69, 58)\",\r\n  },\r\n};\r\n// const lightTheme = {\r\n//   dark: false,\r\n//   colors: {\r\n//     primary: \"rgb(255, 45, 85)\",\r\n//     background: \"white\",\r\n//     card: \"#292D39\",\r\n//     text: \"#000\",\r\n//     border: \"#292D39\",\r\n//     notification: \"rgb(255, 69, 58)\",\r\n//   },\r\n// };\r\nconst uid = \"8b3f2aa1e1b4e9ea2ed2399b3783dba79813b948c9ecbb9555f7927a7b530e0a\";\r\nconst client =\r\n  \"fdf4044597bc43b22cf442e825051dda952c834d1d16d8aebfdb6c223df3a37d\";\r\n\r\nconst Drawer = createDrawerNavigator();\r\n// const Stack = createNativeStackNavigator();\r\n\r\n// function Root() {\r\n//   return (\r\n//     <Stack.Navigator>\r\n//       <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n//       <Stack.Screen name=\"Settings\" component={SettingsScreen} />\r\n//     </Stack.Navigator>\r\n//   );\r\n// }\r\n\r\nexport default function App() {\r\n  const [token, setToken] = React.useState();\r\n  const [delay, setDelay] = React.useState(0);\r\n  const [dark, setDark] = React.useState(true);\r\n  React.useEffect(() => {\r\n    axios\r\n      .post(\"https://api.intra.42.fr/oauth/token\", {\r\n        grant_type: \"client_credentials\",\r\n        client_id: uid,\r\n        client_secret: client,\r\n      })\r\n      .then((tk) => setToken(tk?.data.access_token));\r\n  }, []);\r\n  setInterval(() => {\r\n    axios\r\n      .post(\"https://api.intra.42.fr/oauth/token\", {\r\n        grant_type: \"client_credentials\",\r\n        client_id: uid,\r\n        client_secret: client,\r\n      })\r\n      .then((tk) => {\r\n        setToken(tk?.data.access_token);\r\n        console.log(tk.data);\r\n      });\r\n  });\r\n  console.log(dark);\r\n  const [result, setRes] = React.useState([]);\r\n  return result.length === 0 ? (\r\n    <HomeScreen set={setRes} token={token} theme={dark} setTheme={setDark} />\r\n  ) : (\r\n    <NavigationContainer theme={dark ? darkTheme : DefaultTheme}>\r\n      <Drawer.Navigator initialRouteName=\"Home\">\r\n        <Drawer.Screen\r\n          name=\"Profile\"\r\n          component={() => <ProfileScreen result={result} />}\r\n          options={{\r\n            headerRight: () => (\r\n              <Icon\r\n                type=\"font-awesome-5\"\r\n                name=\"sign-out-alt\"\r\n                color=\"#000\"\r\n                onPress={() => setRes([])}\r\n              />\r\n            ),\r\n            result: result,\r\n          }}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Projects\"\r\n          component={ProjectScreen}\r\n          options={{\r\n            headerRight: () => (\r\n              <Icon\r\n                type=\"font-awesome-5\"\r\n                name=\"sign-out-alt\"\r\n                color=\"#000\"\r\n                onPress={() => setRes([])}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n        <Drawer.Screen\r\n          name=\"Charts\"\r\n          component={ChartScreen}\r\n          options={{\r\n            headerRight: () => (\r\n              <Icon\r\n                type=\"font-awesome-5\"\r\n                name=\"sign-out-alt\"\r\n                color=\"#000\"\r\n                onPress={() => setRes([])}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}