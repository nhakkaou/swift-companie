{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Scatterplot.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactText from \"react-native-web/dist/exports/Text\";\nimport Svg, { Circle, G } from 'react-native-svg';\nimport { Options, styleSvg } from \"./util\";\nimport Axis from \"./Axis\";\nimport GridAxis from \"./GridAxis\";\nimport _ from 'lodash';\n\nvar Stock = require('paths-js/stock');\n\nvar Scatterplot = function (_Component) {\n  _inherits(Scatterplot, _Component);\n\n  var _super = _createSuper(Scatterplot);\n\n  function Scatterplot() {\n    _classCallCheck(this, Scatterplot);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Scatterplot, [{\n    key: \"getMaxAndMin\",\n    value: function getMaxAndMin(chart, key, scale) {\n      var maxValue;\n      var minValue;\n\n      _.each(chart.curves, function (serie) {\n        var values = _.map(serie.item, function (item) {\n          return item[key];\n        });\n\n        var max = _.max(values);\n\n        if (maxValue === undefined || max > maxValue) maxValue = max;\n\n        var min = _.min(values);\n\n        if (minValue === undefined || min < minValue) minValue = min;\n      });\n\n      return {\n        minValue: minValue,\n        maxValue: maxValue,\n        min: scale(minValue),\n        max: scale(maxValue)\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var noDataMsg = this.props.noDataMessage || 'No data available';\n      if (this.props.data === undefined) return React.createElement(ReactText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 48\n        }\n      }, noDataMsg);\n      var options = new Options(this.props);\n\n      var accessor = function accessor(key) {\n        return function (x) {\n          return x[key];\n        };\n      };\n\n      var chart = Stock({\n        data: this.props.data,\n        xaccessor: accessor(this.props.xKey),\n        yaccessor: accessor(this.props.yKey),\n        width: options.chartWidth,\n        height: options.chartHeight,\n        closed: false\n      });\n      var chartArea = {\n        x: this.getMaxAndMin(chart, this.props.xKey, chart.xscale),\n        y: this.getMaxAndMin(chart, this.props.yKey, chart.yscale),\n        margin: options.margin\n      };\n      var colors = styleSvg({}, options);\n\n      var points = _.map(chart.curves, function (c) {\n        return _.map(c.line.path.points(), function (p, j) {\n          var render = React.createElement(G, {\n            key: 'k' + j,\n            x: p[0],\n            y: p[1],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 22\n            }\n          }, React.createElement(Circle, _extends({}, colors, {\n            cx: 0,\n            cy: 0,\n            r: options.r || 5,\n            fillOpacity: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }\n          })));\n          return render;\n        }, this);\n      }, this);\n\n      return React.createElement(Svg, {\n        width: options.width,\n        height: options.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, React.createElement(G, {\n        x: options.margin.left,\n        y: options.margin.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, React.createElement(GridAxis, {\n        scale: chart.xscale,\n        options: options.axisX,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }), React.createElement(GridAxis, {\n        scale: chart.yscale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), points, React.createElement(Axis, {\n        scale: chart.xscale,\n        options: options.axisX,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }), React.createElement(Axis, {\n        scale: chart.yscale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return Scatterplot;\n}(Component);\n\nScatterplot.defaultProps = {\n  xKey: '',\n  yKey: '',\n  options: {\n    width: 600,\n    height: 600,\n    margin: {\n      top: 40,\n      left: 60,\n      bottom: 30,\n      right: 30\n    },\n    fill: '#2980B9',\n    stroke: '#3E90F0',\n    animate: {\n      type: 'delayed',\n      duration: 200,\n      fillTransition: 3\n    },\n    label: {\n      fontFamily: 'Arial',\n      fontSize: 14,\n      bold: true,\n      color: '#34495E'\n    },\n    axisX: {\n      showAxis: true,\n      showLines: true,\n      showLabels: true,\n      showTicks: true,\n      zeroAxis: false,\n      orient: 'bottom',\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#34495E'\n      }\n    },\n    axisY: {\n      showAxis: true,\n      showLines: true,\n      showLabels: true,\n      showTicks: true,\n      zeroAxis: false,\n      orient: 'left',\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#34495E'\n      }\n    }\n  }\n};\nexport { Scatterplot as default };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Scatterplot.js"],"names":["React","Component","Svg","Circle","G","Options","styleSvg","Axis","GridAxis","_","Stock","require","Scatterplot","chart","key","scale","maxValue","minValue","each","curves","serie","values","map","item","max","undefined","min","noDataMsg","props","noDataMessage","data","options","accessor","x","xaccessor","xKey","yaccessor","yKey","width","chartWidth","height","chartHeight","closed","chartArea","getMaxAndMin","xscale","y","yscale","margin","colors","points","c","line","path","p","j","render","r","left","top","axisX","axisY","defaultProps","bottom","right","fill","stroke","animate","type","duration","fillTransition","label","fontFamily","fontSize","bold","color","showAxis","showLines","showLabels","showTicks","zeroAxis","orient"],"mappings":"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","sourcesContent":["/*\nCopyright 2016 Capital One Services, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nSPDX-Copyright: Copyright (c) Capital One Services, LLC\nSPDX-License-Identifier: Apache-2.0\n*/\n\nimport React, {Component} from 'react'\nimport {Text as ReactText}  from 'react-native'\nimport Svg,{ Circle, G } from 'react-native-svg'\nimport { Options, styleSvg } from './util'\nimport Axis from './Axis'\nimport GridAxis from './GridAxis'\nimport _ from 'lodash'\n\nconst Stock = require('paths-js/stock')\n\nexport default class Scatterplot extends Component {\n\n  static defaultProps = {\n    xKey:'',\n    yKey:'',\n    options: {\n      width: 600,\n      height: 600,\n      margin: {top: 40, left: 60, bottom: 30, right: 30},\n      fill: '#2980B9',\n      stroke: '#3E90F0',\n      animate: {\n        type: 'delayed',\n        duration: 200,\n        fillTransition:3\n      },\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#34495E'\n      },\n      axisX: {\n        showAxis: true,\n        showLines: true,\n        showLabels: true,\n        showTicks: true,\n        zeroAxis: false,\n        orient: 'bottom',\n        label: {\n          fontFamily: 'Arial',\n          fontSize: 14,\n          bold: true,\n          color: '#34495E'\n        }\n      },\n      axisY: {\n        showAxis: true,\n        showLines: true,\n        showLabels: true,\n        showTicks: true,\n        zeroAxis: false,\n        orient: 'left',\n        label: {\n          fontFamily: 'Arial',\n          fontSize: 14,\n          bold: true,\n          color: '#34495E'\n        }\n      }\n    }\n  }\n\n  getMaxAndMin(chart, key,scale) {\n    let maxValue\n    let minValue\n    _.each(chart.curves, function (serie) {\n      let values = _.map(serie.item, function (item) {\n        return item[key]\n      })\n\n      let max = _.max(values)\n      if (maxValue === undefined || max > maxValue) maxValue = max\n      let min = _.min(values)\n      if (minValue === undefined || min < minValue) minValue = min\n    })\n    return {\n      minValue: minValue,\n      maxValue: maxValue,\n      min:scale(minValue),\n      max:scale(maxValue)\n    }\n  }\n\n  render() {\n    const noDataMsg = this.props.noDataMessage || 'No data available'\n    if (this.props.data === undefined) return (<ReactText>{noDataMsg}</ReactText>)\n\n    const options = new Options(this.props)\n    const accessor = function (key) {\n      return function (x) {\n        return x[key]\n      }\n    }\n\n    const chart = Stock({\n      data: this.props.data,\n      xaccessor: accessor(this.props.xKey),\n      yaccessor: accessor(this.props.yKey),\n      width: options.chartWidth,\n      height: options.chartHeight,\n      closed: false\n    })\n\n    const chartArea = {\n      x:this.getMaxAndMin(chart,this.props.xKey,chart.xscale),\n      y:this.getMaxAndMin(chart,this.props.yKey,chart.yscale),\n      margin:options.margin\n    }\n\n    const colors = styleSvg({},options)\n    const points = _.map(chart.curves, function (c) {\n      return _.map(c.line.path.points(),function(p,j) {\n        let render = <G key={'k' + j} x={p[0]} y={p[1]}>\n                    <Circle {...colors} cx={0} cy={0} r={options.r || 5} fillOpacity={1} />\n                </G>\n\n        return render\n      },this)\n    },this)\n\n    return (<Svg width={options.width} height={options.height}>\n            <G x={options.margin.left} y={options.margin.top}>\n                <GridAxis scale={chart.xscale} options={options.axisX} chartArea={chartArea} />\n                <GridAxis scale={chart.yscale} options={options.axisY} chartArea={chartArea} />\n                { points }\n                <Axis scale={chart.xscale} options={options.axisX} chartArea={chartArea} />\n                <Axis scale={chart.yscale} options={options.axisY} chartArea={chartArea} />\n            </G>\n        </Svg>)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}