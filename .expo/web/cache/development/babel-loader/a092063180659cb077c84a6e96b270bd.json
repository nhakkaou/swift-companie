{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Bar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactText from \"react-native-web/dist/exports/Text\";\nimport Svg, { G, Path, Text } from 'react-native-svg';\nimport { Colors, Options, fontAdapt, cyclic, color, identity } from \"./util\";\nimport _ from 'lodash';\nimport Axis from \"./Axis\";\nimport GridAxis from \"./GridAxis\";\n\nvar Bar = require('paths-js/bar');\n\nvar BarChart = function (_Component) {\n  _inherits(BarChart, _Component);\n\n  var _super = _createSuper(BarChart);\n\n  function BarChart() {\n    _classCallCheck(this, BarChart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarChart, [{\n    key: \"color\",\n    value: function color(i) {\n      var color = this.props.options.color;\n      if (!_.isString(this.props.options.color)) color = color.color;\n      var pallete = this.props.pallete || Colors.mix(color || '#9ac7f7');\n      return Colors.string(cyclic(pallete, i));\n    }\n  }, {\n    key: \"getMaxAndMin\",\n    value: function getMaxAndMin(values, scale) {\n      var axisY = this.props.options.axisY;\n      var maxValue = axisY.max || 0;\n      var minValue = axisY.min || 0;\n\n      var max = _.max(values);\n\n      if (max > maxValue) maxValue = max;\n\n      var min = _.min(values);\n\n      if (min < minValue) minValue = min;\n      return {\n        minValue: minValue,\n        maxValue: maxValue,\n        min: scale(minValue),\n        max: scale(maxValue)\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var noDataMsg = this.props.noDataMessage || 'No data available';\n      if (this.props.data === undefined) return React.createElement(ReactText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 48\n        }\n      }, noDataMsg);\n      var options = new Options(this.props);\n      var accessor = this.props.accessor || identity(this.props.accessorKey);\n      var chart = Bar({\n        data: this.props.data,\n        gutter: this.props.options.gutter || 10,\n        width: options.chartWidth,\n        height: options.chartHeight,\n        accessor: accessor,\n        min: this.props.options.axisY.min || undefined,\n        max: this.props.options.axisY.max || undefined\n      });\n      var values = chart.curves.map(function (curve) {\n        return accessor(curve.item);\n      });\n      var chartArea = {\n        x: {\n          minValue: 0,\n          maxValue: 200,\n          min: 0,\n          max: options.chartWidth\n        },\n        y: this.getMaxAndMin(values, chart.scale),\n        margin: options.margin\n      };\n      var textStyle = fontAdapt(options.axisX.label);\n      var labelOffset = this.props.options.axisX.label.offset || 20;\n      var lines = chart.curves.map(function (c, i) {\n        var numDataGroups = this.props.data.length || 0;\n        var colorVariationVal = numDataGroups > 1 ? numDataGroups : 3;\n        var color = this.color(i % colorVariationVal);\n        var stroke = Colors.darkenColor(color);\n        return React.createElement(G, {\n          key: 'lines' + i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, React.createElement(Path, {\n          d: c.line.path.print(),\n          stroke: stroke,\n          fill: color,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }), options.axisX.showLabels ? React.createElement(Text, {\n          fontFamily: textStyle.fontFamily,\n          fontSize: textStyle.fontSize,\n          fontWeight: textStyle.fontWeight,\n          fontStyle: textStyle.fontStyle,\n          fill: textStyle.fill,\n          x: c.line.centroid[0],\n          y: labelOffset + chartArea.y.min,\n          originX: c.line.centroid[0],\n          originY: labelOffset + chartArea.y.min,\n          rotate: textStyle.rotate,\n          textAnchor: \"middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, c.item.name) : null);\n      }, this);\n      return React.createElement(Svg, {\n        width: options.width,\n        height: options.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, React.createElement(G, {\n        x: options.margin.left,\n        y: options.margin.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, React.createElement(GridAxis, {\n        scale: chart.scale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }), lines, React.createElement(Axis, {\n        scale: chart.scale,\n        options: options.axisY,\n        chartArea: chartArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nBarChart.defaultProps = {\n  accessorKey: '',\n  options: {\n    width: 600,\n    height: 600,\n    margin: {\n      top: 20,\n      left: 20,\n      bottom: 50,\n      right: 20\n    },\n    color: '#2980B9',\n    gutter: 20,\n    animate: {\n      type: 'oneByOne',\n      duration: 200,\n      fillTransition: 3\n    },\n    axisX: {\n      showAxis: true,\n      showLines: true,\n      showLabels: true,\n      showTicks: true,\n      zeroAxis: false,\n      orient: 'bottom',\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#34495E',\n        rotate: 45\n      }\n    },\n    axisY: {\n      min: false,\n      max: false,\n      showAxis: true,\n      showLines: true,\n      showLabels: true,\n      showTicks: true,\n      zeroAxis: false,\n      orient: 'left',\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#34495E'\n      }\n    }\n  }\n};\nexport { BarChart as default };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Bar.js"],"names":["React","Component","Svg","G","Path","Text","Colors","Options","fontAdapt","cyclic","color","identity","_","Axis","GridAxis","Bar","require","BarChart","i","props","options","isString","pallete","mix","string","values","scale","axisY","maxValue","max","minValue","min","noDataMsg","noDataMessage","data","undefined","accessor","accessorKey","chart","gutter","width","chartWidth","height","chartHeight","curves","map","curve","item","chartArea","x","y","getMaxAndMin","margin","textStyle","axisX","label","labelOffset","offset","lines","c","numDataGroups","length","colorVariationVal","stroke","darkenColor","line","path","print","showLabels","fontFamily","fontSize","fontWeight","fontStyle","fill","centroid","rotate","name","left","top","defaultProps","bottom","right","animate","type","duration","fillTransition","showAxis","showLines","showTicks","zeroAxis","orient","bold"],"mappings":"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","sourcesContent":["/*\nCopyright 2016 Capital One Services, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nSPDX-Copyright: Copyright (c) Capital One Services, LLC\nSPDX-License-Identifier: Apache-2.0\n*/\n\nimport React,{Component} from 'react'\nimport {Text as ReactText}  from 'react-native'\nimport Svg,{ G, Path, Text } from 'react-native-svg'\nimport { Colors, Options, fontAdapt, cyclic, color, identity } from './util'\nimport _ from 'lodash'\nimport Axis from './Axis'\nimport GridAxis from './GridAxis'\nconst Bar = require('paths-js/bar')\n\nexport default class BarChart extends Component {\n\n  static defaultProps = {\n    accessorKey:'',\n    options: {\n      width: 600,\n      height: 600,\n      margin: {top: 20, left: 20, bottom: 50, right: 20},\n      color: '#2980B9',\n      gutter: 20,\n      animate: {\n        type: 'oneByOne',\n        duration: 200,\n        fillTransition: 3\n      },\n      axisX: {\n        showAxis: true,\n        showLines: true,\n        showLabels: true,\n        showTicks: true,\n        zeroAxis: false,\n        orient: 'bottom',\n        label: {\n          fontFamily: 'Arial',\n          fontSize: 14,\n          bold: true,\n          color: '#34495E',\n          rotate: 45,\n        }\n      },\n      axisY: {\n        min: false,\n        max: false,\n        showAxis: true,\n        showLines: true,\n        showLabels: true,\n        showTicks: true,\n        zeroAxis: false,\n        orient: 'left',\n        label: {\n          fontFamily: 'Arial',\n          fontSize: 14,\n          bold: true,\n          color: '#34495E'\n        }\n      }\n    }\n  }\n\n  color(i) {\n    let color = this.props.options.color\n    if (!_.isString(this.props.options.color)) color = color.color\n    const pallete = this.props.pallete || Colors.mix(color || '#9ac7f7')\n    return Colors.string(cyclic(pallete, i))\n  }\n\n  getMaxAndMin(values, scale) {\n    const axisY = this.props.options.axisY\n\t\tlet maxValue = axisY.max || 0\n\t\tlet minValue = axisY.min || 0\n\n    let max = _.max(values)\n    if (max > maxValue) maxValue = max\n    let min = _.min(values)\n    if (min < minValue) minValue = min\n\n    return {\n      minValue: minValue,\n      maxValue: maxValue,\n      min: scale(minValue),\n      max: scale(maxValue)\n    }\n  }\n\n  render() {\n    const noDataMsg = this.props.noDataMessage || 'No data available'\n    if (this.props.data === undefined) return (<ReactText>{noDataMsg}</ReactText>)\n\n    let options = new Options(this.props)\n    let accessor = this.props.accessor || identity(this.props.accessorKey)\n\n    let chart = Bar({\n      data: this.props.data,\n      gutter: this.props.options.gutter || 10,\n      width: options.chartWidth,\n      height: options.chartHeight,\n      accessor: accessor,\n      min: this.props.options.axisY.min || undefined,\n      max: this.props.options.axisY.max || undefined,\n    })\n\n    let values = chart.curves.map((curve) => accessor(curve.item))\n    let chartArea = {x: {minValue: 0, maxValue: 200, min: 0, max: options.chartWidth},\n                     y: this.getMaxAndMin(values, chart.scale),\n                     margin:options.margin}\n\n    let textStyle = fontAdapt(options.axisX.label)\n    let labelOffset = this.props.options.axisX.label.offset || 20\n\n    let lines = chart.curves.map(function (c, i) {\n      let numDataGroups = this.props.data.length || 0\n      let colorVariationVal = numDataGroups > 1 ? numDataGroups : 3\n      let color = this.color(i % colorVariationVal)\n      let stroke = Colors.darkenColor(color)\n      return (\n                <G key={'lines' + i}>\n                    <Path  d={ c.line.path.print() } stroke={stroke} fill={color}/>\n                    {options.axisX.showLabels ?\n                        <Text fontFamily={textStyle.fontFamily}\n                          fontSize={textStyle.fontSize} fontWeight={textStyle.fontWeight} fontStyle={textStyle.fontStyle}\n                          fill={textStyle.fill} x={c.line.centroid[0]} y={labelOffset + chartArea.y.min}\n                          originX={c.line.centroid[0]} originY={labelOffset + chartArea.y.min} rotate={textStyle.rotate}\n                          textAnchor=\"middle\">\n                          {c.item.name}\n                        </Text>\n                    : null}\n                </G>\n            )\n    }, this)\n\n    return (<Svg width={options.width} height={options.height}>\n              <G x={options.margin.left} y={options.margin.top}>\n                <GridAxis scale={chart.scale} options={options.axisY} chartArea={chartArea} />\n                {lines}\n                <Axis scale={chart.scale} options={options.axisY} chartArea={chartArea} />\n              </G>\n            </Svg>)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}