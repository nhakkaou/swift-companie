{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Pie.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport extractProps from 'react-native-svg/lib/extract/extractProps';\nimport React, { Component } from 'react';\nimport ReactText from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Svg, { G, Path, Text, Circle } from 'react-native-svg';\nimport { Colors, Options, cyclic, identity, fontAdapt } from \"./util\";\nimport _ from 'lodash';\n\nvar Pie = require('paths-js/pie');\n\nvar ANIMATION_START_DELAY = 1000;\n\nvar PieChart = function (_Component) {\n  _inherits(PieChart, _Component);\n\n  var _super = _createSuper(PieChart);\n\n  function PieChart(props) {\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    _this = _super.call(this, props);\n\n    _this._shouldAnim = function () {\n      return _this.props.options.animate.enabled && _this.props.data.length > 1;\n    };\n\n    _this._animationRefArray = {};\n    _this._startAnimation = _this._startAnimation.bind(_assertThisInitialized(_this));\n    _this._createAnimation = _this._createAnimation.bind(_assertThisInitialized(_this));\n    _this._onAnimationFinished = _this._onAnimationFinished.bind(_assertThisInitialized(_this));\n    if (_this._shouldAnim()) _this._animationArray = new Array(props.data.length);\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"color\",\n    value: function color(i) {\n      var color = this.props.color || this.props.options && this.props.options.color;\n\n      if (Array.isArray(color)) {\n        if (i >= color.length) {\n          var pallete = Colors.mix(color[i % color.length]);\n          return Colors.string(cyclic(pallete, i));\n        }\n\n        return color[i];\n      } else {\n        if (color && !_.isString(color)) color = color.color;\n\n        var _pallete = this.props.pallete || this.props.options && this.props.options.pallete || Colors.mix(color || '#9ac7f7');\n\n        return Colors.string(cyclic(_pallete, i));\n      }\n    }\n  }, {\n    key: \"defaultRange\",\n    get: function get() {\n      return _.map(Array(this.props.data && this.props.data.length), function () {\n        return 0;\n      });\n    }\n  }, {\n    key: \"_onAnimationFinished\",\n    value: function _onAnimationFinished() {\n      this._animationArray.forEach(function (anim) {\n        return anim.removeAllListeners();\n      });\n    }\n  }, {\n    key: \"_createAnimation\",\n    value: function _createAnimation(index, fill) {\n      var _this2 = this;\n\n      var maxVal = this.props.data[index][this.props.accessorKey];\n      this._animationArray[index] = new Animated.Value(0);\n\n      this._animationArray[index].addListener(function (v) {\n        var sliceRef = _this2._animationRefArray[\"SLICE\" + index];\n        if (sliceRef === undefined) return;\n        if (sliceRef._finished) return;\n\n        var animValue = _this2._animationArray[index].interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n\n        var props = {\n          fill: fill,\n          fillOpacity: animValue.__getValue()\n        };\n        var nativeProps = extractProps(props, sliceRef);\n        sliceRef.setNativeProps(nativeProps);\n        if (props.fillOpacity === 1) sliceRef._finished = true;\n      });\n    }\n  }, {\n    key: \"_startAnimation\",\n    value: function _startAnimation() {\n      var _this3 = this;\n\n      Animated.sequence(this._animationArray.map(function (a) {\n        return Animated.timing(a, {\n          toValue: 1,\n          duration: _this3.props.options.animate.duration\n        });\n      })).start(this._onAnimationFinished);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var noDataMsg = this.props.noDataMessage || 'No data available';\n      if (this.props.data === undefined) return React.createElement(ReactText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 48\n        }\n      }, noDataMsg);\n      var options = new Options(this.props);\n      var x = options.chartWidth / 2 - (options.margin.left || 0);\n      var y = options.chartHeight / 2 - (options.margin.top || 0);\n      var radius = Math.min(x, y);\n      var r = this.props.r;\n      r = isNaN(r) ? this.props.options && this.props.options.r : r;\n      r = isNaN(r) ? radius / 2 : r;\n      var R = this.props.R;\n      R = R || this.props.options && this.props.options.R;\n      R = R || radius;\n\n      var _ref = this.props.center || this.props.options && this.props.options.center || [x, y],\n          _ref2 = _slicedToArray(_ref, 2),\n          centerX = _ref2[0],\n          centerY = _ref2[1];\n\n      var textStyle = fontAdapt(options.label);\n      var slices;\n\n      if (this.props.data.length === 1) {\n        var item = this.props.data[0];\n        var outerFill = item.color && Colors.string(item.color) || this.color(0);\n        var innerFill = this.props.monoItemInnerFillColor || '#fff';\n        var stroke = typeof fill === 'string' ? outerFill : Colors.darkenColor(outerFill);\n        slices = React.createElement(G, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }\n        }, React.createElement(Circle, {\n          r: R,\n          cx: centerX,\n          cy: centerY,\n          stroke: stroke,\n          fill: outerFill,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }\n        }), React.createElement(Circle, {\n          r: r,\n          cx: centerX,\n          cy: centerY,\n          stroke: stroke,\n          fill: innerFill,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          fontFamily: textStyle.fontFamily,\n          fontSize: textStyle.fontSize,\n          fontWeight: textStyle.fontWeight,\n          fontStyle: textStyle.fontStyle,\n          fill: textStyle.fill,\n          textAnchor: \"middle\",\n          x: centerX,\n          y: centerY - R + (R - r) / 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }, item.name));\n      } else {\n        var chart = Pie({\n          center: [centerX, centerY],\n          r: r,\n          R: R,\n          data: this.props.data,\n          accessor: this.props.accessor || identity(this.props.accessorKey)\n        });\n        slices = chart.curves.map(function (c, i) {\n          var fill = c.item.color && Colors.string(c.item.color) || _this4.color(i);\n\n          var stroke = typeof fill === 'string' ? fill : Colors.darkenColor(fill);\n          var opacity = _this4._shouldAnim() ? 0 : 1;\n          var finalStroke = _this4._shouldAnim() ? undefined : stroke;\n          if (_this4._shouldAnim()) _this4._createAnimation(i, fill);\n          return React.createElement(G, {\n            key: i,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }\n          }, React.createElement(Path, {\n            ref: function ref(_ref3) {\n              return _this4._animationRefArray[\"SLICE\" + i] = _ref3;\n            },\n            fill: fill,\n            fillOpacity: opacity,\n            d: c.sector.path.print(),\n            stroke: finalStroke,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 23\n            }\n          }), React.createElement(G, {\n            x: options.margin.left,\n            y: options.margin.top,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 23\n            }\n          }, React.createElement(Text, {\n            fontFamily: textStyle.fontFamily,\n            fontSize: textStyle.fontSize,\n            fontWeight: textStyle.fontWeight,\n            fontStyle: textStyle.fontStyle,\n            fill: textStyle.fill,\n            textAnchor: \"middle\",\n            x: c.sector.centroid[0],\n            y: c.sector.centroid[1],\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }\n          }, c.item.name)));\n        });\n      }\n\n      if (this._shouldAnim()) setTimeout(this._startAnimation, ANIMATION_START_DELAY);\n      var returnValue = React.createElement(Svg, {\n        width: options.width,\n        height: options.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, React.createElement(G, {\n        x: options.margin.left,\n        y: options.margin.top,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, slices));\n      return returnValue;\n    }\n  }]);\n\n  return PieChart;\n}(Component);\n\nPieChart.defaultProps = {\n  options: {\n    margin: {\n      top: 20,\n      left: 20,\n      right: 20,\n      bottom: 20\n    },\n    width: 600,\n    height: 600,\n    color: '#2980B9',\n    r: 100,\n    R: 200,\n    legendPosition: 'topLeft',\n    animate: {\n      enabled: false,\n      type: 'oneByOne',\n      duration: 200,\n      fillTransition: 3\n    },\n    label: {\n      fontFamily: 'Arial',\n      fontSize: 14,\n      bold: true,\n      color: '#ECF0F1'\n    }\n  }\n};\nexport { PieChart as default };","map":{"version":3,"sources":["/mnt/c/Users/noure/OneDrive/Bureau/swift-companion/node_modules/react-native-pathjs-charts/src/Pie.js"],"names":["extractProps","React","Component","Svg","G","Path","Text","Circle","Colors","Options","cyclic","identity","fontAdapt","_","Pie","require","ANIMATION_START_DELAY","PieChart","props","_shouldAnim","options","animate","enabled","data","length","_animationRefArray","_startAnimation","bind","_createAnimation","_onAnimationFinished","_animationArray","Array","i","color","isArray","pallete","mix","string","isString","map","forEach","anim","removeAllListeners","index","fill","maxVal","accessorKey","Animated","Value","addListener","v","sliceRef","undefined","_finished","animValue","interpolate","inputRange","outputRange","extrapolate","fillOpacity","__getValue","nativeProps","setNativeProps","sequence","a","timing","toValue","duration","start","noDataMsg","noDataMessage","x","chartWidth","margin","left","y","chartHeight","top","radius","Math","min","r","isNaN","R","center","centerX","centerY","textStyle","label","slices","item","outerFill","innerFill","monoItemInnerFillColor","stroke","darkenColor","fontFamily","fontSize","fontWeight","fontStyle","name","chart","accessor","curves","c","opacity","finalStroke","ref","sector","path","print","centroid","setTimeout","returnValue","width","height","defaultProps","right","bottom","legendPosition","type","fillTransition","bold"],"mappings":"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","sourcesContent":["/*\nCopyright 2016 Capital One Services, LLC\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\nSPDX-Copyright: Copyright (c) Capital One Services, LLC\nSPDX-License-Identifier: Apache-2.0\n*/\n\nimport extractProps from 'react-native-svg/lib/extract/extractProps';\nimport React, {Component} from 'react'\nimport {Text as ReactText, Animated}  from 'react-native'\nimport Svg,{ G, Path, Text, Circle} from 'react-native-svg'\nimport { Colors, Options, cyclic, identity, fontAdapt } from './util'\nimport _ from 'lodash'\nconst Pie = require('paths-js/pie')\n\nconst ANIMATION_START_DELAY = 1000;\n\nexport default class PieChart extends Component {\n\n  static defaultProps = {\n    options: {\n      margin: {top: 20, left: 20, right: 20, bottom: 20},\n      width: 600,\n      height: 600,\n      color: '#2980B9',\n      r: 100,\n      R: 200,\n      legendPosition: 'topLeft',\n      animate: {\n        enabled: false,\n        type: 'oneByOne',\n        duration: 200,\n        fillTransition: 3\n      },\n      label: {\n        fontFamily: 'Arial',\n        fontSize: 14,\n        bold: true,\n        color: '#ECF0F1'\n      }\n    },\n  }\n\n  constructor(props){\n    super(props);\n\n    this._animationRefArray = {};\n    this._startAnimation = this._startAnimation.bind(this)\n    this._createAnimation = this._createAnimation.bind(this)\n    this._onAnimationFinished = this._onAnimationFinished.bind(this)\n    if (this._shouldAnim()) this._animationArray = new Array(props.data.length)\n    \n  }\n\n  _shouldAnim = () => this.props.options.animate.enabled && this.props.data.length > 1\n\n  color(i) {\n    let color = this.props.color || (this.props.options && this.props.options.color)\n    if (Array.isArray(color)) {\n      if (i >= color.length) {\n        const pallete = Colors.mix(color[i % color.length])\n        return Colors.string(cyclic(pallete, i))\n      }\n      return color[i];\n    } else {\n      if (color && !_.isString(color)) color = color.color\n      let pallete = this.props.pallete || (this.props.options && this.props.options.pallete) || Colors.mix(color || '#9ac7f7')\n      return Colors.string(cyclic(pallete, i))\n    }\n  }\n\n  get defaultRange() {\n    return _.map(Array(this.props.data && this.props.data.length),function(){return 0})\n  }\n\n  _onAnimationFinished(){\n    this._animationArray.forEach((anim) => anim.removeAllListeners())\n  }\n\n  _createAnimation(index, fill) {\n    const maxVal = this.props.data[index][this.props.accessorKey]\n    this._animationArray[index] = new Animated.Value(0)\n    this._animationArray[index].addListener(v => {\n        const sliceRef = this._animationRefArray[`SLICE${index}`]\n        if (sliceRef === undefined) return\n        if (sliceRef._finished) return;\n\n        const animValue = this._animationArray[index].interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, 1],\n            extrapolate: 'clamp'\n        })\n\n        const props = {\n          fill: fill,\n          fillOpacity: animValue.__getValue()\n        }\n\n        const nativeProps = extractProps(props, sliceRef)\n        sliceRef.setNativeProps(nativeProps)\n        if (props.fillOpacity === 1) sliceRef._finished = true\n      });\n  }\n\n  _startAnimation(){\n    Animated.sequence(\n      this._animationArray.map(a =>\n        Animated.timing(a, {\n          toValue: 1,\n          duration: this.props.options.animate.duration\n        })\n      )\n    ).start(this._onAnimationFinished)\n  }\n\n  render() {\n    const noDataMsg = this.props.noDataMessage || 'No data available'\n    if (this.props.data === undefined) return (<ReactText>{noDataMsg}</ReactText>)\n\n    let options = new Options(this.props)\n\n    let x = (options.chartWidth / 2) - (options.margin.left || 0)\n    let y = (options.chartHeight / 2) - (options.margin.top || 0)\n\n    let radius = Math.min(x, y)\n\n    let r = this.props.r\n    r = (isNaN(r) ? (this.props.options && this.props.options.r) : r)\n    r = (isNaN(r) ? (radius / 2) : r)\n\n    let R = this.props.R\n    R = (R || (this.props.options && this.props.options.R))\n    R = (R || radius)\n\n    let [centerX, centerY] = this.props.center || (this.props.options && this.props.options.center) || [x, y]\n\n    let textStyle = fontAdapt(options.label)\n\n    let slices\n\n    if (this.props.data.length === 1) {\n      let item = this.props.data[0]\n      let outerFill = (item.color && Colors.string(item.color)) || this.color(0)\n      let innerFill = this.props.monoItemInnerFillColor || '#fff'\n      let stroke = typeof fill === 'string' ? outerFill : Colors.darkenColor(outerFill)\n      slices = (\n        <G>\n          <Circle r={R} cx={centerX} cy={centerY} stroke={stroke} fill={outerFill}/>\n          <Circle r={r} cx={centerX} cy={centerY} stroke={stroke} fill={innerFill}/>\n          <Text fontFamily={textStyle.fontFamily}\n                fontSize={textStyle.fontSize}\n                fontWeight={textStyle.fontWeight}\n                fontStyle={textStyle.fontStyle}\n                fill={textStyle.fill}\n                textAnchor=\"middle\"\n                x={centerX}\n                y={centerY - R + ((R-r)/2)}>{item.name}</Text>\n        </G>\n      )\n    } else {\n      let chart = Pie({\n        center: [centerX, centerY],\n        r,\n        R,\n        data: this.props.data,\n        accessor: this.props.accessor || identity(this.props.accessorKey)\n      })\n\n      slices = chart.curves.map( (c, i) => {\n        let fill = (c.item.color && Colors.string(c.item.color)) || this.color(i)\n        let stroke = typeof fill === 'string' ? fill : Colors.darkenColor(fill)\n        const opacity = this._shouldAnim() ? 0 : 1\n        const finalStroke = this._shouldAnim() ? undefined : stroke\n\n        if (this._shouldAnim()) this._createAnimation(i, fill);\n\n        return (\n                  <G key={ i }>\n                      <Path  ref={ref => (this._animationRefArray[`SLICE${i}`] = ref)} fill={fill} fillOpacity={opacity} d={c.sector.path.print() } stroke={finalStroke} />\n                      <G x={options.margin.left} y={options.margin.top}>\n                        <Text fontFamily={textStyle.fontFamily}\n                              fontSize={textStyle.fontSize}\n                              fontWeight={textStyle.fontWeight}\n                              fontStyle={textStyle.fontStyle}\n                              fill={textStyle.fill}\n                              textAnchor=\"middle\"\n                              x={c.sector.centroid[0]}\n                              y={c.sector.centroid[1]}>{ c.item.name }</Text>\n                      </G>\n                  </G>\n              )\n      })\n    }\n\n    if (this._shouldAnim()) setTimeout(this._startAnimation, ANIMATION_START_DELAY)\n\n    let returnValue = <Svg width={options.width} height={options.height}>\n            <G x={options.margin.left} y={options.margin.top}>\n                { slices }\n            </G>\n          </Svg>\n\n    return returnValue\n  }\n}\n"]},"metadata":{},"sourceType":"module"}